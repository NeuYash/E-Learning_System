package controller;import java.io.BufferedInputStream;import java.io.BufferedOutputStream;import java.io.FileInputStream;import java.io.IOException;import java.sql.SQLException;import javax.servlet.ServletContext;import javax.servlet.ServletException;import javax.servlet.ServletOutputStream;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import model.CategoryModel;import dao.DataAccessLayer;/** * Servlet implementation class ImageController */@WebServlet("/ImageController")public class ImageController extends HttpServlet {	private static final long serialVersionUID = 1L;           /**     * @see HttpServlet#HttpServlet()     */    public ImageController() {        super();        // TODO Auto-generated constructor stub    }		/**	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)	 */	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {		// TODO Auto-generated method stub		/*String id = request.getParameter("p");		System.out.println(id);		String Category = null;		Category = request.getParameter("c");		System.out.println("Category- "+Category);		String filepath = null;		CategoryModel cm = new CategoryModel();		if(Category.equals("1"))		{	try {								cm = DataAccessLayer.selectTop(id);				} catch (SQLException e) {					// TODO Auto-generated catch block					e.printStackTrace();				}		}		System.out.println(cm.getColor()+"  "+cm.getFilepath()+"  "+cm.getId()+"  "+cm.getName()+"  "+cm.getPrice()+"  "+cm.getSize());		if(Category.equals("2"))		{			try {				//filepath = DataAccessLayer.selectPant(id);			} catch (SQLException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}		}				  	response.setContentType("image/jpeg");  		    ServletOutputStream out;  		    out = response.getOutputStream();  		    FileInputStream fin = new FileInputStream(cm.getFilepath());  		      		    BufferedInputStream bin = new BufferedInputStream(fin);  		    BufferedOutputStream bout = new BufferedOutputStream(out);  		    int ch =0; ;  		    while((ch=bin.read())!=-1)  		    {  		    bout.write(ch);  		    }  		      		    bin.close();  		    fin.close();  		    bout.close();  		    out.close();  */	}}